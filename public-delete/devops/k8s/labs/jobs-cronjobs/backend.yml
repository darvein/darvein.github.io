apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: check-mysql
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup mysql-service; do echo waiting for mysql-service; sleep 2; done;']
      - name: init-db
        image: mysql:5.7
        command: ['sh', '-c', 'mysql -h mysql-service -u root -p$(cat /etc/mysql-secret/mysql-root-password) < /sql/init.sql']
        volumeMounts:
        - name: sql-volume
          mountPath: /sql
        - name: mysql-secret-volume
          mountPath: /etc/mysql-secret
          readOnly: true
      containers:
      - name: backend
        image: registry.local:5000/backend:v1
        ports:
        - containerPort: 3000
        env:
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: "r00tdb"
      volumes:
      - name: sql-volume
        configMap:
          name: sql-create
      - name: mysql-secret-volume
        secret:
          secretName: mysql-secret
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 31002
